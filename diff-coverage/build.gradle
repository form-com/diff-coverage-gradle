plugins {
    id 'java-gradle-plugin'
    id "pl.droidsonroids.jacoco.testkit" version "1.0.8"
}

group 'com.form.coverage'

dependencies {
    implementation project(':jacoco-filtering-extension')
}

ext {
    junit_version = '5.8.2'
    kotest_version = '4.6.1'
}

testing {
    suites {
        test {
            useJUnitJupiter()
            dependencies {
                implementation 'org.assertj:assertj-core:3.20.2'
                implementation 'io.mockk:mockk:1.12.3'
                implementation "io.kotest:kotest-runner-junit5-jvm:$kotest_version"
                implementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
                implementation "io.kotest:kotest-property-jvm:$kotest_version"
            }
        }

        functionalTest(JvmTestSuite) {
            testType = TestSuiteType.FUNCTIONAL_TEST
            useJUnitJupiter()

            sources {
                kotlin.srcDir file('src/funcTest/kotlin')
                resources.srcDir file('src/funcTest/resources')
            }
            gradlePlugin {
                testSourceSets sources
            }

            dependencies {
                implementation project
                implementation 'org.eclipse.jgit:org.eclipse.jgit:5.12.0.202106070339-r'
                implementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
                implementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
            }
        }
    }
}

configurations {
    functionalTestImplementation.extendsFrom testImplementation
    functionalTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.named('check') {
    dependsOn(testing.suites.functionalTest)
}

tasks.named('functionalTest') {
    description = 'Runs the functional tests.'
    group = 'verification'
    dependsOn(generateJacocoFunctionalTestKitProperties)
}
jacocoTestKit {
    applyTo('functionalTestRuntimeOnly', tasks.named('functionalTest'))
}
